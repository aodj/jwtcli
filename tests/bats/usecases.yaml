encode-basic:
- name: encode as default command
  command: >
    jwt '{"foo": "bar"}'
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode payload
  command: >
    jwt encode '{"foo": "bar"}'
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode with default algorithm (uppercase)
  command: >
    jwt encode '{"foo": "bar"}' --algorithm HS256
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode with default algorithm (lowercase)
  command: >
    jwt encode '{"foo": "bar"}' --algorithm hs256
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode as default command using pipe
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode using piped payload
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode with default algorithm using pipe
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm HS256"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true

encode-as-header:
- name: encode as header, with encode as a default command
  command: >
    jwt '{"foo": "bar"}' --as-header
  output: "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE"
  output_must_be_quoted: true
  assert_success: true
- name: encode as header, with payload
  command: >
    jwt encode '{"foo": "bar"}' --as-header
  output: "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE"
  output_must_be_quoted: true
  assert_success: true
- name: encode as header, with piped payload
  command: >
     bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --as-header"
  output: "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE"
  output_must_be_quoted: true
  assert_success: true

encode-using-secret:
- name: encode with secret, using encode as a default command
  command: >
     jwt '{"foo": "bar"}' --secret foo
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true
- name: encode with secret and payload
  command: >
     jwt encode '{"foo": "bar"}' --secret foo
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true
- name: encode with secret, using default command and piped payload
  command: >
     bash -c "echo '{\"foo\": \"bar\"}' | jwt --secret foo"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true
- name: encode with secret, using piped payload
  command: >
     bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --secret foo"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true

encode-using-private-key:
- name: encode using private key string
  command: >
    jwt encode '{"foo": "bar"}' --algorithm RS256 --private-key '-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA1HgzBfJv2cOjQryCwe8NEelriOTNFWKZUivevUrRhlqcmZJd\nCvuCJRr+xCN+OmO8qwgJJR98feNujxVg+J9Ls3/UOA4HcF9nYH6aqVXELAE8Hk/A\nLvxi96ms1DDuAvQGaYZ+lANxlvxeQFOZSbjkz/9mh8aLeGKwqJLp3p+OhUBQpwvA\nUAPg82+OUtgTW3nSljjeFr14B8qAneGSc/wl0ni++1SRZUXFSovzcqQOkla3W27r\nrLfrD6LXgj/TsDs4vD1PnIm1zcVenKT7TfYI17bsG/O/Wecwz2Nl19pL7gDosNru\nF3ogJWNq1Lyn/ijPQnkPLpZHyhvuiycYcI3DiQIDAQABAoIBAQCt9uzwBZ0HVGQs\nlGULnUu6SsC9iXlR9TVMTpdFrij4NODb7Tc5cs0QzJWkytrjvB4Se7XhK3KnMLyp\ncvu/Fc7J3fRJIVN98t+V5pOD6rGAxlIPD4Vv8z6lQcw8wQNgb6WAaZriXh93XJNf\nYBO2hSj0FU5CBZLUsxmqLQBIQ6RR/OUGAvThShouE9K4N0vKB2UPOCu5U+d5zS3W\n44Q5uatxYiSHBTYIZDN4u27Nfo5WA+GTvFyeNsO6tNNWlYfRHSBtnm6SZDY/5i4J\nfxP2JY0waM81KRvuHTazY571lHM/TTvFDRUX5nvHIu7GToBKahfVLf26NJuTZYXR\n5c09GAXBAoGBAO7a9M/dvS6eDhyESYyCjP6w61jD7UYJ1fudaYFrDeqnaQ857Pz4\nBcKx3KMmLFiDvuMgnVVj8RToBGfMV0zP7sDnuFRJnWYcOeU8e2sWGbZmWGWzv0SD\n+AhppSZThU4mJ8aa/tgsepCHkJnfoX+3wN7S9NfGhM8GDGxTHJwBpxINAoGBAOO4\nZVtn9QEblmCX/Q5ejInl43Y9nRsfTy9lB9Lp1cyWCJ3eep6lzT60K3OZGVOuSgKQ\nvZ/aClMCMbqsAAG4fKBjREA6p7k4/qaMApHQum8APCh9WPsKLaavxko8ZDc41kZt\nhgKyUs2XOhW/BLjmzqwGryidvOfszDwhH7rNVmRtAoGBALYGdvrSaRHVsbtZtRM3\nimuuOCx1Y6U0abZOx9Cw3PIukongAxLlkL5G/XX36WOrQxWkDUK930OnbXQM7ZrD\n+5dW/8p8L09Zw2VHKmb5eK7gYA1hZim4yJTgrdL/Y1+jBDz+cagcfWsXZMNfAZxr\nVLh628x0pVF/sof67pqVR9UhAoGBAMcQiLoQ9GJVhW1HMBYBnQVnCyJv1gjBo+0g\nemhrtVQ0y6+FrtdExVjNEzboXPWD5Hq9oKY+aswJnQM8HH1kkr16SU2EeN437pQU\nzKI/PtqN8AjNGp3JVgLioYp/pHOJofbLA10UGcJTMpmT9ELWsVA8P55X1a1AmYDu\ny9f2bFE5AoGAdjo95mB0LVYikNPa+NgyDwLotLqrueb9IviMmn6zKHCwiOXReqXD\nX9slB8RA15uv56bmN04O//NyVFcgJ2ef169GZHiRFIgIy0Pl8LYkMhCYKKhyqM7g\nxN+SqGqDTKDC22j00S7jcvCaa1qadn1qbdfukZ4NXv7E2d/LO0Y2Kkc=\n-----END RSA PRIVATE KEY-----'
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.A_KO_-3GZ7sklBgk5QAwDCZJZhd97Z7p8l3cICN1f3ba-MkKEA9HO_oh_WZbtb0Tia0r_dAWYszqj8BDF3wjyApBCstKycFU8cz5VVHt_iLRpzU_yoQFiK7SXN0hYuZRW-GfRsb8bAc1OFqc95Xl_5tfdp8AoGufOq526C8ODLat0tbK0nJd-2wFf2B2JPnZmSwJ6n6BWBfq_Wkyn9k81608zaN5dk2sVdiMeMu0CTg6cr8r3-fZZn-0EruMWB34g4wegM-alBbRCidSDLi_uw2rUOJqXyKbP10lMBn-WBzJwx0U0615LuljBnKQfh8evyFi5Q4gLeiMMItVQEGlSw
  assert_success: true
- name: encode using private key string and piped in payload
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm RS256 --private-key '-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA1HgzBfJv2cOjQryCwe8NEelriOTNFWKZUivevUrRhlqcmZJd\nCvuCJRr+xCN+OmO8qwgJJR98feNujxVg+J9Ls3/UOA4HcF9nYH6aqVXELAE8Hk/A\nLvxi96ms1DDuAvQGaYZ+lANxlvxeQFOZSbjkz/9mh8aLeGKwqJLp3p+OhUBQpwvA\nUAPg82+OUtgTW3nSljjeFr14B8qAneGSc/wl0ni++1SRZUXFSovzcqQOkla3W27r\nrLfrD6LXgj/TsDs4vD1PnIm1zcVenKT7TfYI17bsG/O/Wecwz2Nl19pL7gDosNru\nF3ogJWNq1Lyn/ijPQnkPLpZHyhvuiycYcI3DiQIDAQABAoIBAQCt9uzwBZ0HVGQs\nlGULnUu6SsC9iXlR9TVMTpdFrij4NODb7Tc5cs0QzJWkytrjvB4Se7XhK3KnMLyp\ncvu/Fc7J3fRJIVN98t+V5pOD6rGAxlIPD4Vv8z6lQcw8wQNgb6WAaZriXh93XJNf\nYBO2hSj0FU5CBZLUsxmqLQBIQ6RR/OUGAvThShouE9K4N0vKB2UPOCu5U+d5zS3W\n44Q5uatxYiSHBTYIZDN4u27Nfo5WA+GTvFyeNsO6tNNWlYfRHSBtnm6SZDY/5i4J\nfxP2JY0waM81KRvuHTazY571lHM/TTvFDRUX5nvHIu7GToBKahfVLf26NJuTZYXR\n5c09GAXBAoGBAO7a9M/dvS6eDhyESYyCjP6w61jD7UYJ1fudaYFrDeqnaQ857Pz4\nBcKx3KMmLFiDvuMgnVVj8RToBGfMV0zP7sDnuFRJnWYcOeU8e2sWGbZmWGWzv0SD\n+AhppSZThU4mJ8aa/tgsepCHkJnfoX+3wN7S9NfGhM8GDGxTHJwBpxINAoGBAOO4\nZVtn9QEblmCX/Q5ejInl43Y9nRsfTy9lB9Lp1cyWCJ3eep6lzT60K3OZGVOuSgKQ\nvZ/aClMCMbqsAAG4fKBjREA6p7k4/qaMApHQum8APCh9WPsKLaavxko8ZDc41kZt\nhgKyUs2XOhW/BLjmzqwGryidvOfszDwhH7rNVmRtAoGBALYGdvrSaRHVsbtZtRM3\nimuuOCx1Y6U0abZOx9Cw3PIukongAxLlkL5G/XX36WOrQxWkDUK930OnbXQM7ZrD\n+5dW/8p8L09Zw2VHKmb5eK7gYA1hZim4yJTgrdL/Y1+jBDz+cagcfWsXZMNfAZxr\nVLh628x0pVF/sof67pqVR9UhAoGBAMcQiLoQ9GJVhW1HMBYBnQVnCyJv1gjBo+0g\nemhrtVQ0y6+FrtdExVjNEzboXPWD5Hq9oKY+aswJnQM8HH1kkr16SU2EeN437pQU\nzKI/PtqN8AjNGp3JVgLioYp/pHOJofbLA10UGcJTMpmT9ELWsVA8P55X1a1AmYDu\ny9f2bFE5AoGAdjo95mB0LVYikNPa+NgyDwLotLqrueb9IviMmn6zKHCwiOXReqXD\nX9slB8RA15uv56bmN04O//NyVFcgJ2ef169GZHiRFIgIy0Pl8LYkMhCYKKhyqM7g\nxN+SqGqDTKDC22j00S7jcvCaa1qadn1qbdfukZ4NXv7E2d/LO0Y2Kkc=\n-----END RSA PRIVATE KEY-----'"
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.A_KO_-3GZ7sklBgk5QAwDCZJZhd97Z7p8l3cICN1f3ba-MkKEA9HO_oh_WZbtb0Tia0r_dAWYszqj8BDF3wjyApBCstKycFU8cz5VVHt_iLRpzU_yoQFiK7SXN0hYuZRW-GfRsb8bAc1OFqc95Xl_5tfdp8AoGufOq526C8ODLat0tbK0nJd-2wFf2B2JPnZmSwJ6n6BWBfq_Wkyn9k81608zaN5dk2sVdiMeMu0CTg6cr8r3-fZZn-0EruMWB34g4wegM-alBbRCidSDLi_uw2rUOJqXyKbP10lMBn-WBzJwx0U0615LuljBnKQfh8evyFi5Q4gLeiMMItVQEGlSw
  assert_success: true
- name: encode using private key file piped in
  command: >
    jwt encode '{"foo": "bar"}' --algorithm RS256 --private-key "$(< tests/bats/keys/testkey_rsa.priv)"
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.A_KO_-3GZ7sklBgk5QAwDCZJZhd97Z7p8l3cICN1f3ba-MkKEA9HO_oh_WZbtb0Tia0r_dAWYszqj8BDF3wjyApBCstKycFU8cz5VVHt_iLRpzU_yoQFiK7SXN0hYuZRW-GfRsb8bAc1OFqc95Xl_5tfdp8AoGufOq526C8ODLat0tbK0nJd-2wFf2B2JPnZmSwJ6n6BWBfq_Wkyn9k81608zaN5dk2sVdiMeMu0CTg6cr8r3-fZZn-0EruMWB34g4wegM-alBbRCidSDLi_uw2rUOJqXyKbP10lMBn-WBzJwx0U0615LuljBnKQfh8evyFi5Q4gLeiMMItVQEGlSw
  assert_success: true
- name: encode using private key file contents and payload piped in
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm RS256 --private-key \"$(< tests/bats/keys/testkey_rsa.priv)\""
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.A_KO_-3GZ7sklBgk5QAwDCZJZhd97Z7p8l3cICN1f3ba-MkKEA9HO_oh_WZbtb0Tia0r_dAWYszqj8BDF3wjyApBCstKycFU8cz5VVHt_iLRpzU_yoQFiK7SXN0hYuZRW-GfRsb8bAc1OFqc95Xl_5tfdp8AoGufOq526C8ODLat0tbK0nJd-2wFf2B2JPnZmSwJ6n6BWBfq_Wkyn9k81608zaN5dk2sVdiMeMu0CTg6cr8r3-fZZn-0EruMWB34g4wegM-alBbRCidSDLi_uw2rUOJqXyKbP10lMBn-WBzJwx0U0615LuljBnKQfh8evyFi5Q4gLeiMMItVQEGlSw
  assert_success: true
- name: encode using private-key-file
  command: >
    jwt encode '{"foo": "bar"}' --algorithm RS256 --private-key-file tests/bats/keys/testkey_rsa.priv
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.A_KO_-3GZ7sklBgk5QAwDCZJZhd97Z7p8l3cICN1f3ba-MkKEA9HO_oh_WZbtb0Tia0r_dAWYszqj8BDF3wjyApBCstKycFU8cz5VVHt_iLRpzU_yoQFiK7SXN0hYuZRW-GfRsb8bAc1OFqc95Xl_5tfdp8AoGufOq526C8ODLat0tbK0nJd-2wFf2B2JPnZmSwJ6n6BWBfq_Wkyn9k81608zaN5dk2sVdiMeMu0CTg6cr8r3-fZZn-0EruMWB34g4wegM-alBbRCidSDLi_uw2rUOJqXyKbP10lMBn-WBzJwx0U0615LuljBnKQfh8evyFi5Q4gLeiMMItVQEGlSw
  assert_success: true
- name: encode using private-key-file and piped in payload
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm RS256 --private-key-file tests/bats/keys/testkey_rsa.priv"
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.A_KO_-3GZ7sklBgk5QAwDCZJZhd97Z7p8l3cICN1f3ba-MkKEA9HO_oh_WZbtb0Tia0r_dAWYszqj8BDF3wjyApBCstKycFU8cz5VVHt_iLRpzU_yoQFiK7SXN0hYuZRW-GfRsb8bAc1OFqc95Xl_5tfdp8AoGufOq526C8ODLat0tbK0nJd-2wFf2B2JPnZmSwJ6n6BWBfq_Wkyn9k81608zaN5dk2sVdiMeMu0CTg6cr8r3-fZZn-0EruMWB34g4wegM-alBbRCidSDLi_uw2rUOJqXyKbP10lMBn-WBzJwx0U0615LuljBnKQfh8evyFi5Q4gLeiMMItVQEGlSw
  assert_success: true

decode-basic:
- name: decode payload
  command: >
    jwt decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode payload with default algorithm
  command: >
    jwt decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE --algorithm HS256
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using piped payload
  command: >
    bash -c "echo eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE | jwt decode"
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
