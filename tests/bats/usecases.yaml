encode-basic:
- name: encode as default command
  command: >
    jwt '{"foo": "bar"}'
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode payload
  command: >
    jwt encode '{"foo": "bar"}'
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode with default algorithm (uppercase)
  command: >
    jwt encode '{"foo": "bar"}' --algorithm HS256
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode with default algorithm (lowercase)
  command: >
    jwt encode '{"foo": "bar"}' --algorithm hs256
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode as default command using pipe
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode using piped payload
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true
- name: encode with default algorithm using pipe
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm HS256"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  assert_success: true

encode-as-header:
- name: encode as header, with encode as a default command
  command: >
    jwt '{"foo": "bar"}' --as-header
  output: "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE"
  output_must_be_quoted: true
  assert_success: true
- name: encode as header, with payload
  command: >
    jwt encode '{"foo": "bar"}' --as-header
  output: "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE"
  output_must_be_quoted: true
  assert_success: true
- name: encode as header, with piped payload
  command: >
     bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --as-header"
  output: "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE"
  output_must_be_quoted: true
  assert_success: true

encode-using-secret:
- name: encode with secret, using encode as a default command
  command: >
     jwt '{"foo": "bar"}' --secret foo
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true
- name: encode with secret and payload
  command: >
     jwt encode '{"foo": "bar"}' --secret foo
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true
- name: encode with secret, using default command and piped payload
  command: >
     bash -c "echo '{\"foo\": \"bar\"}' | jwt --secret foo"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true
- name: encode with secret, using piped payload
  command: >
     bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --secret foo"
  output: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4
  assert_success: true

encode-using-private-key:
- name: encode using private key string
  command: >
    jwt encode '{"foo": "bar"}' --algorithm RS256 --private-key '-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCVuZ0RW+/EJRTn\nMFHz0FpMhYRWVl5MgW7RVDSIruTVlDiUBFTM0MvrxewoANa5l6j2qfCbCHK7G4cG\naHOi/eIaCm/xZ1Um1edUvFEpxuay5oaZ4TAMq5LqtivBozt0nrzdhf13ymAQiIEs\nPjR18nyrz0d2veR3iZ9v9qDx+WYYEiK+d++374EXWplCVItq3AiT6MrE91aOERH0\nfX5pR+r1GulpWPoic7Ue9qjpzBdvNxEqbzCZxvmX8HTlOgYXXd1gWAgU540Y/jnF\noJE9IchZKgcoN8k+pBnaEyfoCyu7g93ocfNeMrw/fKvdd7diLGDSvVMXqoJUqAWz\n21T112DrAgMBAAECggEAGyBFSitXbbhwKJCTEHK7oWiBOOkt7Xt3udohKHBTSjSv\n6XU9bdwYTe+OYRMB1B8bgBD65AOsUaTjmjAbXzjTGXexn1Fi1oXjgvEZXVHJYzkr\nwr5PJ8R/+iEmHU93CqJlwlavvN+/9s7cZEki1QmpN7F2l5dAyL140t6ieyR9sDd1\nyzpBQ54kktAZxxabRBGs2qYTQEQZ2yJXBZglGQDLLbsv7TeU9ddTQEvNd4YNKy49\n5aTeAOQjHMsbI8gnKLnfdZJiqTl/jvWmkFlAq87j3vCf0P6PqsUIAtOX29xKUc0R\nvQPzyi/ZBuQq/7gAR7YyaK2EdFeHZ4FkKrDN43Ie+QKBgQDTACQt9hGkIGyNYbdr\nvQK5SuCS2GR8O/tbG7Vv9voY7JtFezYd7IPHpI/AlEvuJXXteUZyBHNfvZH4WheR\nSsMtXuOS5v426V3Tu3Z0T6ua1U8uSoGe+z7DrOHQZFRhhWKZG8EsoKOjOIFCKDLT\nU29TgNuMV/KDwDzdJrQ7HpNjswKBgQC1qA3TPuYQFfOr+MDdFdkH9K1+WDJYSJKG\nehruaj4e0iAn31su+Qh48Lx8nC/M+2p2zMXJ8K/IiIJt8woooNBelUym3Qi+j9ja\nxNcdbtW1gyd9VrOeEal5EI7YpF1G8AnttCD+JfPYjk2X9ULSMKSfCjzS8choVXdL\nFvgFiUJR6QKBgBa8jyl8uI3tCIV7oB418dMxpF1uf/V7KSy6IaT9AhopdNnZ2w0C\nbXjX3L2tvTjeRITgapziqeQJM2+FlcCMQ9fhv7gWuBIGt5uXOb5yz1UR40RjtvAA\nttSzDmo8RXN0whkpinlangd6kUMlvcRT200uN3o6B+H2lxhlkUpFkzBNAoGBAI3s\nKDD8mT3ECMY46GVSZmeCz/E/8sVqnZ+W0memdbYasKi2JkVCp03ltz0bwXTCkGEU\nhwrIkm13yX8hPLSVP3ZF6scLNYO8Ws5Ar1f9edYAC+Au1tIONnuxZgj4ETAU5Yzj\nCEvHVwW/1/t60KPrARKIKxEbeVmaPENcRJX+sOPRAoGAeob56OW2WvsTctrUTVb6\n8eLjkUSX/QCaxS0UDAv/wsvlLf0xZdooDOBaOUj8ihsDS9DE5RTwZ/VhBdMuc+Q+\nwZWWiNihQmOPUcmT89cnQLNxFW5cGLcE5i/OC961nLi4ROgdRc5+ZzFf9NYpiMTC\ngTo6d1fwGdPWdVtLW4uUpxI=\n-----END PRIVATE KEY-----'
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ
  assert_success: true
- name: encode using private key string and piped in payload
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm RS256 --private-key '-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCVuZ0RW+/EJRTn\nMFHz0FpMhYRWVl5MgW7RVDSIruTVlDiUBFTM0MvrxewoANa5l6j2qfCbCHK7G4cG\naHOi/eIaCm/xZ1Um1edUvFEpxuay5oaZ4TAMq5LqtivBozt0nrzdhf13ymAQiIEs\nPjR18nyrz0d2veR3iZ9v9qDx+WYYEiK+d++374EXWplCVItq3AiT6MrE91aOERH0\nfX5pR+r1GulpWPoic7Ue9qjpzBdvNxEqbzCZxvmX8HTlOgYXXd1gWAgU540Y/jnF\noJE9IchZKgcoN8k+pBnaEyfoCyu7g93ocfNeMrw/fKvdd7diLGDSvVMXqoJUqAWz\n21T112DrAgMBAAECggEAGyBFSitXbbhwKJCTEHK7oWiBOOkt7Xt3udohKHBTSjSv\n6XU9bdwYTe+OYRMB1B8bgBD65AOsUaTjmjAbXzjTGXexn1Fi1oXjgvEZXVHJYzkr\nwr5PJ8R/+iEmHU93CqJlwlavvN+/9s7cZEki1QmpN7F2l5dAyL140t6ieyR9sDd1\nyzpBQ54kktAZxxabRBGs2qYTQEQZ2yJXBZglGQDLLbsv7TeU9ddTQEvNd4YNKy49\n5aTeAOQjHMsbI8gnKLnfdZJiqTl/jvWmkFlAq87j3vCf0P6PqsUIAtOX29xKUc0R\nvQPzyi/ZBuQq/7gAR7YyaK2EdFeHZ4FkKrDN43Ie+QKBgQDTACQt9hGkIGyNYbdr\nvQK5SuCS2GR8O/tbG7Vv9voY7JtFezYd7IPHpI/AlEvuJXXteUZyBHNfvZH4WheR\nSsMtXuOS5v426V3Tu3Z0T6ua1U8uSoGe+z7DrOHQZFRhhWKZG8EsoKOjOIFCKDLT\nU29TgNuMV/KDwDzdJrQ7HpNjswKBgQC1qA3TPuYQFfOr+MDdFdkH9K1+WDJYSJKG\nehruaj4e0iAn31su+Qh48Lx8nC/M+2p2zMXJ8K/IiIJt8woooNBelUym3Qi+j9ja\nxNcdbtW1gyd9VrOeEal5EI7YpF1G8AnttCD+JfPYjk2X9ULSMKSfCjzS8choVXdL\nFvgFiUJR6QKBgBa8jyl8uI3tCIV7oB418dMxpF1uf/V7KSy6IaT9AhopdNnZ2w0C\nbXjX3L2tvTjeRITgapziqeQJM2+FlcCMQ9fhv7gWuBIGt5uXOb5yz1UR40RjtvAA\nttSzDmo8RXN0whkpinlangd6kUMlvcRT200uN3o6B+H2lxhlkUpFkzBNAoGBAI3s\nKDD8mT3ECMY46GVSZmeCz/E/8sVqnZ+W0memdbYasKi2JkVCp03ltz0bwXTCkGEU\nhwrIkm13yX8hPLSVP3ZF6scLNYO8Ws5Ar1f9edYAC+Au1tIONnuxZgj4ETAU5Yzj\nCEvHVwW/1/t60KPrARKIKxEbeVmaPENcRJX+sOPRAoGAeob56OW2WvsTctrUTVb6\n8eLjkUSX/QCaxS0UDAv/wsvlLf0xZdooDOBaOUj8ihsDS9DE5RTwZ/VhBdMuc+Q+\nwZWWiNihQmOPUcmT89cnQLNxFW5cGLcE5i/OC961nLi4ROgdRc5+ZzFf9NYpiMTC\ngTo6d1fwGdPWdVtLW4uUpxI=\n-----END PRIVATE KEY-----'"
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ
  assert_success: true
- name: encode using private key file piped in
  command: >
    jwt encode '{"foo": "bar"}' --algorithm RS256 --private-key "$(< tests/bats/keys/rsa-keypair-private.key)"
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ
  assert_success: true
- name: encode using private key file contents and payload piped in
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm RS256 --private-key \"$(< tests/bats/keys/rsa-keypair-private.key)\""
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ
  assert_success: true
- name: encode using private-key-file
  command: >
    jwt encode '{"foo": "bar"}' --algorithm RS256 --private-key-file tests/bats/keys/rsa-keypair-private.key
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ
  assert_success: true
- name: encode using private-key-file and piped in payload
  command: >
    bash -c "echo '{\"foo\": \"bar\"}' | jwt encode --algorithm RS256 --private-key-file tests/bats/keys/rsa-keypair-private.key"
  output: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ
  assert_success: true

decode-basic:
- name: decode payload
  command: >
    jwt decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode payload with default algorithm
  command: >
    jwt decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE --algorithm HS256
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using piped payload
  command: >
    bash -c "echo eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ._NaFhGu8tCCgBKksGBA6ADwRdKx3e9GES_KyF4A5phE | jwt decode"
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true

decode-using-secret:
- name: decode with secret
  command: >
     jwt decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4 --secret foo
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode with secret and algorithm
  command: >
     jwt decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4 --secret foo --algorithm hs256
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using piped payload and secret
  command: >
    bash -c "echo eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.txbhRxOhcJ-ZezxxAAsTalseZx-yUA_6FWW9q7MFSe4 | jwt decode --secret foo"
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true

decode-using-public-key:
- name: decode using public key string
  command: >
    jwt decode eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ --algorithm RS256 --public-key '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlbmdEVvvxCUU5zBR89Ba\nTIWEVlZeTIFu0VQ0iK7k1ZQ4lARUzNDL68XsKADWuZeo9qnwmwhyuxuHBmhzov3i\nGgpv8WdVJtXnVLxRKcbmsuaGmeEwDKuS6rYrwaM7dJ683YX9d8pgEIiBLD40dfJ8\nq89Hdr3kd4mfb/ag8flmGBIivnfvt++BF1qZQlSLatwIk+jKxPdWjhER9H1+aUfq\n9RrpaVj6InO1Hvao6cwXbzcRKm8wmcb5l/B05ToGF13dYFgIFOeNGP45xaCRPSHI\nWSoHKDfJPqQZ2hMn6Asru4Pd6HHzXjK8P3yr3Xe3Yixg0r1TF6qCVKgFs9tU9ddg\n6wIDAQAB\n-----END PUBLIC KEY-----'
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using public key string and piped in payload
  command: >
    bash -c "echo eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ | jwt decode --algorithm RS256 --public-key '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlbmdEVvvxCUU5zBR89Ba\nTIWEVlZeTIFu0VQ0iK7k1ZQ4lARUzNDL68XsKADWuZeo9qnwmwhyuxuHBmhzov3i\nGgpv8WdVJtXnVLxRKcbmsuaGmeEwDKuS6rYrwaM7dJ683YX9d8pgEIiBLD40dfJ8\nq89Hdr3kd4mfb/ag8flmGBIivnfvt++BF1qZQlSLatwIk+jKxPdWjhER9H1+aUfq\n9RrpaVj6InO1Hvao6cwXbzcRKm8wmcb5l/B05ToGF13dYFgIFOeNGP45xaCRPSHI\nWSoHKDfJPqQZ2hMn6Asru4Pd6HHzXjK8P3yr3Xe3Yixg0r1TF6qCVKgFs9tU9ddg\n6wIDAQAB\n-----END PUBLIC KEY-----'"
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using public key file piped in
  command: >
    jwt decode eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ --algorithm RS256 --public-key "$(< tests/bats/keys/rsa-keypair-public.crt)"
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using public key file contents and payload piped in
  command: >
    bash -c "echo eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ | jwt decode --algorithm RS256 --public-key \"$(< tests/bats/keys/rsa-keypair-public.crt)\""
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using public-key-file
  command: >
    jwt decode eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ --algorithm RS256 --public-key-file tests/bats/keys/rsa-keypair-public.crt
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
- name: decode using public-key-file and piped in payload
  command: >
    bash -c "echo eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.LWlH362MuiQY9Q83yslsRAwjBAuPQJFBiEHQu6s8Xx9DOSL_smxzfxnDo197q9Z95aX6lIA5D97iD8vD-ngBM_K0vpfGDurzvtanxhONIQDTjxHuhZXZiI2qxLNOweWtIEt9tbfGl9m45Y7AirEBPRKl0IqI0Q1V72ZYAAv0WP-f4AJI_l2pqEbOeY2cAYvuMo5c409jdtHQFnT6j0LbTXg3H_zVZjH__kP1TxSzQg1yJyfukZrK25C86jKPfOUkUatepJHCVbuUScf7oMrWgnSvkWyBUZH_IfNy7xSipgnk4qF3IybxtdTM0f_qctdr6dm3rUtPZsOO6Pu_15vyGQ | jwt decode --algorithm RS256 --public-key-file tests/bats/keys/rsa-keypair-public.crt"
  output: {'foo': 'bar'}
  output_must_be_quoted: true
  assert_success: true
